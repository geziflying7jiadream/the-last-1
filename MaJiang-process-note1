枣庄麻将：
（每天成长一小步，未来铸成一大步）
平台-------------前端
数据->来->去->数据结果
extGameService.php——》SwooleWebSocketProxyService.php、extGameBusiness.php、SwooleSetting::$port、
class/config/ApiConfig.php -> PrcServiceName = MaJiangService
1.MaJiangService.php
      CreateRoom($request):创建房间
                           sender信息，role信息：   平台    存储redis
                           createData：???
                                   cardType：初始局数  === $jushu
                                    paoType: 炮初始值
                                     canChi：是否吃牌bool  初始值：true
                                     创建游戏redis
                           createGame:在当前room，jushu,              
                                      vo_MaJiangGame：初始化麻将游戏数据逻辑->$mjGame
                           updateMajiangGame: 平台   存储redis  创建好的游戏 $game
                           ExtGameHelper::senderMessage  向玩家（客户端）推送（游戏需要发送客户端的数据 getGameSendMsg）消息
                           ExtGameHelper::sendGameCreate  向平台发送 游戏创建成功
                           ExtGameHelper：platFormPath平台路径、（发送游戏操作：向玩家推送消息、游戏状态[创建成功、开始、结束、保存战绩]、消耗房卡）
      JoinRoom($request):加入房间
                           serder信息，role信息： 平台     存储redis
                           取出游戏数据redis
                           getMajiangGame:取出游戏redis
                           ExtGameHelper：senderMessage  向玩家（客户端）推送（游戏需要发送客户端的数据 getGameSendMsg）消息
      Ready($request):游戏准备工作（$game）
                      当前room，当前操作者senderUid，当前游戏$game
                      $game->isReady是否准备好,
                      准备好的话：$game->reday[当前操作者]=1，
                      isAllReady($room,$game):是否所有人准备好，$mjLists=NULL;初始化操作者手牌，
                      所有人准备好：
                            1.先整理本局最开始状态：
                            MajiangDao::delPlayerMajiangByRoom($this->room);      删除房间中玩家的麻将（上一局数据）
                            MajiangDao::clearOperating                            删除操作（包含操作，操作count）
                                  判断是否第一局：
                                        currentCount:当前局数
                                        totalFan：总分初始100
                                        第一局：room中的所有players,
                                              遍历所有player:判断totalFan是否NULL，每个成员初始分为100：$game->totalFan[$uuid]=100
                                      第一局准备工作完成：
                                          ExtGameHelper::sendGameStart($room->id);        向平台发送 游戏开始的消息
                                          ExtGameHelper::sendUseCard($room->id);  ?????   向平台发送 消耗房卡,一般在第一轮游戏完成之后就调用
                                  不是第一局：
                                        startGame($room,$game):开始游戏逻辑                返回值：MaJiangConstant::faMj($room,$game)  发麻将
                            开始游戏：
                            MjGameConstant::startGame($room,$game)                        返回值：array($game,$myLists)
                            遍历$myLists:
                                    MajiangDao::updatePlayerMajiang($uid2,$list)：        平台redis  更新玩家的麻将列表
                        接下来：            
                            MajiangDao::updateMajiangGame($game)      redis  更新游戏数据  
                        --------------------上面-------服务器端操作（第一局：平台发送游戏开始消息；除外）------------------------------------------
                        向房间中玩家推送消息：
                            RoomConstant::pushMsgToRoom($uid,array('tag'=>'ready','uid'=>$uid),$room,true);向房间中的玩家推送消息
                        ------------------------------发送准备消息--给平台----------------------------------------------------------------
                        判断准备好，发送游戏开始消息给平台：
                            遍历玩家列表：$uid,$mjList
                            每一个玩家网络sender---->PlatromDao::getSender($uid);
                            向客户端 玩家推送消息：
                            ExtGameHelper::senderMessage(array($senderInfo),$pushMsg);
      开始游戏：
      ChuPai($request)：出牌
                  mjVal：出的牌
                  checkParams(mjVal)：检测参数---------------prc公共方法
                  $game:获取游戏
                        ->isStart：游戏没开始
                        ->currentUid:当前不是你出牌
                        ->chupai:当前不能出牌
                        ->currentState:补花阶段不能出牌    阶段状态 0=>发牌 1=>出牌 
                  $mjList:获取玩家麻将             MajiangDao::getPlayerMajiang($uid)
                  判断是否出了一张没有的牌:?????    ArrayUtil::contains($mjList,$mjVal)
                  $myList:ArrayUtil::removeValue($mjList,$mjVal)     删除一张牌
                  MajiangDao::updatePlayerMajiang($uid,$mjList)      更新当前玩家手牌
                        初始化chuPai信息：
                              $game->isChuPai         初始值：true
                                   ->anGang           初始值：true
                                   ->lastUid          最后一个出牌人（当前人）
                                    游戏最后一次打出的麻将lastMj判断：
                                                      lastMj==$MjVal--------->samechupaiCount++    连续出相同牌个数
                                                            否则   ---------->samechupaiUid连续出牌的首家uid
                                                                  ---------->samechupaiCount = 1连续出了相同牌的次数
                              ->lastMj = $mjVal       重新赋值
                              ->chupai = false        当前是否可以出牌
                              ->canHu = true          是否可以胡牌
                              ->chupaiList[$uid]      取出是否已有$uid的出牌列表-------->array_push($chupaiList,$mjVal)
                                                                              -------->->chupaiList[$uid] = $chupaiList    加入所有出牌列表
                                                                              -------->->chupaiCount[$uid] +=1;            记录出牌数量
                                                                              
                              判断罚款:
                                    连续出牌罚款:罚款（连续出同牌罚首家，出相同四张牌罚自己）
                                                判断：->samechupaiCount == 4
                                                           罚款：SuanFanConstant::fakuan($game->samechupaiUid,$game,$room)
                                                           ??????
                                                              ?    $fauid = $game->samechupaiUid;
                                                              ?    $game->samechupaiCount = 1;
                                                              ?    $game->samechupaiUid = null;
                              
                                    出相同四张牌罚款：$count_value：array_count_values($chupaiList)
                                                判断：$count_value存在 &&  $count_value==4
                                                            罚款：SuanFanConstant::fakuan($uid,$game,$room)
                                                                  $fauid = $uid
                                                                  
                             保存外包定将牌(可更换):?????????                              
                                                            
                             判断听牌：
                                    ->ting[$uid] = $request['ting']：听牌赋值
                              
                              连杠初始化：
                                    ->lianGang = 0
                              
                              更新redis服务器游戏数据：
                                    MajiangDao::updateMajiangGame($game)
                                    
                              检测游戏结束：
                                    ->checkGameOver($game)  
                                    
                             ----------------------服务端结束-------------------------
                         向客户端推送：
                                $pushMsg = array('tag'=>'chupai','sender'=>$uid,'mjVal'=>$mjVal,'game'=>MjGameConstant::getGameSendMsg($game))
                                如果是听牌：$pushMsg['ting'] = $request['ting']      
                                如果是罚款：$pushMsg['fauid'] = $fauid    罚款人
                           推送消息-------RoomConstant::pushMsgToRoom($uid,$pushMsg,$room,true)




        操作：一个人打完牌之后 其他几个人需要操作一下
        operating($request)：
                  检测有operatingType参数：checkParams($request, array('operatingType'))
                             操作参数赋值：$operatingType = (int)$request['operatingType']
                        发送消息的玩家UID：$uid = $this->senderUid   
                       获取当前房间的游戏：$game = MajiangDao::getMajiangGame($this->room->id)
                       判断：
                        游戏没开始，
                        当前为出牌阶段，
                        当前打牌的人不能操作，  $operatingType：0
                        没有这个操作类型，      MaJiangConstant::hasOperating($operatingType)
                              有操作类型且能操作：
                                    获取手牌：MajiangDao::getPlayerMajiang($uid)
                                        过牌无须检测，
                                          吃牌合法需要额外检测：$operatingType == 1 && isset($request['chiMjs']
                                                      检测是否可以吃牌：
                                                            MjGameConstant::checkChi($room,$game,$uid,$chiMjs），
                                                            存储吃牌redis：MajiangDao::savePlayerChiPaiMsg($uid,$chiMjs),
                                                   检测操作吃牌是否合法：MjGameConstant::checkOperating($room,$game,$operatingType,$uid,$mjList))
                                                      
                       获取所有操作：$ops = MajiangDao::getOperating($game->id);
                       判断晚间操作过：if(isset($ops[$uid])) return;//已经操作过了
                       
                       添加操作类型：MajiangDao::addOperating($game->id,$uid,$operatingType)
                                          增加操作次数，用于防止并发：MajiangDao::addOperatingCount($game->id) != 4
                              推送一个消息 表示该用户已经响应出牌操作：RoomConstant::pushMsgToRoom($uid,array('tag'=>'operating','sender'=>$uid),$room,true)
                        
                    杠：
                        $opUid = null;
                        $opVal = -1;
                        $sameOpUid = null;
                        $operatings = MajiangDao::getOperating($game->id);
                        $gangUid = null
                        检测优先操作：遍历$operatings
                                          判断优先操作的玩家：
                                          
                    获取下一个出牌的人：
                        $nextPlayerUid = MjGameConstant::getNextPlayer($room,$game->currentUid)     
                             $getNewMj = true;//是否摸新的牌
                               $mjList = null;
                        判断$opVal != -1：
                              有人发起了相同的操作，找离上家最近的人：
                                                     getClosedUid：
                                             count($sameOpUid) > 1 ------->$opUid = MjGameConstant::getClosedUid($game->currentUid,$sameOpUid,$room)
                                                                   --否--> $opUid = $sameOpUid[0]    
            
                              获取玩家手牌：$mjList = MajiangDao::getPlayerMajiang($opUid)
                              判断玩家操作：
                                          $opVal == 1：吃牌
                                                 $chiMjs = MajiangDao::getPlayerChiPaiMsg($opUid):获取玩家用那两张牌来吃牌
                                                 $mjList = removeValue($mjList,$chiMjs[0]):删除牌0
                                                 $mjList = removeValue($mjList,$chiMjs[0]):删除牌1，  新的麻将手牌
                                                 
                                                 MajiangDao::updatePlayerMajiang($opUid,$mjList)：更新玩家麻将redis
                                                 
                                                 array_push($chiMjs,$game->lastMj):             游戏最后一张麻将，加入吃牌数组，并排序sort($chiMjs)
                                                 $chiList = isset($game->chiList[$opUid]):      获取 $opUid(操作者) 吃牌列表，
                                                 array_push($chiList,$chiMjs)：                 吃的牌，加入自己的吃牌列表，
                                                 $game->chiList[$opUid] = $chiList：            加入总的吃牌列表
                                                 
                                                 $game->canHu = false：                         能胡：初始false
                                                 $nextPlayerUid = $opUid:                       下一个玩家
                                                 $getNewMj = false：                            新麻将：false
                                                 
                                                 
                                          $opVal == 2：碰牌
                                                 ArrayUtil::removeValue($mjList,$game->lastMj,2)：清除最后一张麻将
                                                 MajiangDao::updatePlayerMajiang($opUid,$mjList)：更新玩家麻将
                                                 $pengList = $game->pengList[$opUid]:             碰的牌，加入自己的碰牌列表
                                                 array_push($pengList,$game->lastMj)：            游戏最后一张麻将，加入碰牌列表，
                                                 $game->pengList[$opUid] = $pengList：            加入总的碰牌列表，
                                                 $game->canHu = false：                           能胡：初始false
                                                 
                                                 //记录点碰
                                                 $game->dp[$game->lastMj] = $game->lastUid：      记录点碰
                                                                          判断第一张碰的麻将：      $game->firstPengMj[$opUid]                     
                                                 $game->firstPengMj[$opUid] = $game->lastMj：      记录第一张碰的麻将
                                                 下一个玩家：
                                                       $nextPlayerUid = $opUid
                                                       $getNewMj = false
                                                 
                                                  //检测外包胡
                                                 
                                          $opVal == 3：杠牌
                                                  $checkCount = 3：                                                      检测杠牌数
                                                  $mjList = ArrayUtil::removeValue($mjList,$game->lastMj,$checkCount)：  清除碰牌麻将
                                                  MajiangDao::updatePlayerMajiang($opUid,$mjList)：                      更新玩家麻将
                                                  
                                                  $game->canHu = $checkCount == 3：                 能胡：初始值
                                                  $tempFanData = $game->fanData：                   分数
                                                  $tempFanInfos = $game->fanInfos：                 分数信息
                                                  $game = SuanFanConstant::gangOther($opUid,$game->lastUid,$game,$room,$game->lastMj)：杠别人的牌，分数，      返回值：$game
                                                  
                                                  //记录点碰
                                                  $game->dg[$game->lastMj] = $game->lastUid：
                                                  $game->lastGangMj = $game->lastMj：               最后一张杠牌
                                                  $nextPlayerUid = $opUid：
                                                  $getNewMj = $checkCount == 3：
                                                  
                                                  //外包胡最后一杠不算分：（判断）
                                                  
                                                  
                                                  MajiangDao::updateMajiangGame($game)：            更新游戏redis
                                                  $this->checkGameOver($game):                      检测游戏结束
                                                  
                                           $opVal == 4：胡牌
                                                      一炮多响：
                                                            count($sameOpUid) > 1 && $game->paoType == 1（判断）：paoType:包冲 不包冲  初始值：1
                                                                                                                           
                                                                                                      ------->是： $zhuang = null                  庄家初始值：NULL
                                                                                                                   getRoomPlayerMajiangs($room)    获取所有玩家麻将
                                                                                                                   $huMjs = array()   胡麻将库      初始值：空数组
                                                                                                                   循环遍历：$sameOpUid，
                                                                                                                            getPlayerMajiang($v)            获取遍历玩家的手牌
                                                                                                                            array_push($mjList,$game->lastMj)： 将游戏最后一张麻将，推入遍历玩家手牌
                                                                                                                            $allMjs[$v] = $mjList  ?????????我觉得在这里没起作用???????????
                                                                                                                            $game->pao = $game->lastUid     点炮的人
                                                                                                                            SuanFanConstant::hu()           返回值：$game 包含（总分，每个分........）
                                                                                                                                                            $game = SuanFanConstant::hu($v,$mjList,$game,$room,0,$game->lastMj)
                                                                                                                            $huMjs[$v] = $game->lastMj      点胡麻将  加入胡麻将库
                                                                                                                            ----
                                                                                                                            MajiangDao::updateMajiangGame($game)  更新麻将游戏数据redis\
                                                                                                                            --判断当前胡牌人：
                                                                                                                                          $v == $game->zhuang ？ 是庄家：$zhuang = $v
                                                                                                                   -------------遍历结束-------------------------------------------------                        
                                                                                                                   判断庄家是否为NULL：
                                                                                                                            $zhuang庄家为空,下一个出牌人坐庄：     $zhuang = MjGameConstant::getNextPlayer($room,$game->pao) 
                                                                                                                            结束游戏，重新初始逻辑及数据：         $game = MjGameConstant::stopGame($room,$game,$zhuang)    
                                                                                                                                                                包含：重新洗牌，定庄家，初始化分数
                                                                                                                                                            
                                                                                                                                                            
                                                                                                                        //一炮多响比下胡 
                                                                                                                        ？？？？？？
                                                                                                                        ？？？？？
                                                             ------------------------------更新游戏redis-----------推送客户端----------------------------------------------                                                           ---
                                                             MajiangDao::updateMajiangGame($game) 
                                                             $pushMsg = array('tag'=>'hupai','sender'=>$sameOpUid,'huMjs'=>$huMjs,'opVal'=>4,'game'=>MjGameConstant::getGameSendMsg($game),'allMjs'=>$allMjs,'_158'=>array())
                                                             
                                                      不是一炮多响：
                                                            将最后一张麻将推送入胡牌玩家手中：       array_push($mjList,$game->lastMj)    +   sort($mjList)
                                                                                    点炮人：       $game->pao = $game->lastUid
                                                                  胡牌，算分，返回游戏$game：       $game = SuanFanConstant::hu($opUid,$mjList,$game,$room,0,$game->lastMj)
                                                                 结束游戏，初始变量,游戏操作：       $game = MjGameConstant::stopGame($room,$game,$opUid)
                                                            ------------------------------更新游戏redis-----------推送客户端----------------------------------------------                                                           ---
                                                             MajiangDao::updateMajiangGame($game) 
                                                             $pushMsg = array('tag'=>'hupai','sender'=>array($opUid),'huMjs'=>$huMjs,'opVal'=>4,'game'=>MjGameConstant::getGameSendMsg($game),'allMjs'=>$allMjs,'_158'=>array())
                                            
                      -------判断一炮多响是否结束------------推送信息到客户端--------检查游戏结束-----返回-----------------                 
                                            RoomConstant::pushMsgToRoom($opUid,$pushMsg,$room,true);
                                            $this->checkGameOver($game);
                                            return             
                                                                    
                                                      
                          杠碰吃胡操作：
                              新的出牌列表：$chupaiList = $game->chupaiList[$game->currentUid]
                                    $game：
                                       $game->chupaiList[$game->currentUid] = ArrayUtil::removeValue($chupaiList,$chupaiList[count($chupaiList) -
                 
      --------------------下一个操作者----------------------------------------
                          下一个当前操作者：$game->currentUid = $nextPlayerUid
                          下一个玩家手牌：$nextmjList = MajiangDao::getPlayerMajiang($nextPlayerUid)

                          //有花牌必须换，不能出牌//没出过牌，但是有听牌，此时不能给新牌：
                                  if(MaJiangConstant::hasFlowerMj($nextmjList) || (!$game->isChuPai[$nextPlayerUid] && MaJiangConstant::ting($nextmjList,null,null,null,null,$game)))
                                  真：  $game->chupai = false; 和  $getNewMj = false;      
                                  假：  $game->chupai = true
                                  
                          玩家剩余手牌：
                                  if(isset($game->mjCount[$opUid]))                       mjCount:每个玩家剩余手牌
                                  真：$game->mjCount[$opUid] -= 3    少3张
                                  假：$game->mjCount[$opUid] = 10    

                          获取一张新麻将：
                                  $newMj = -1：        设置新牌初始值-1
                                  判断给新牌：
                                  if($getNewMj)
                                  真：给新牌   $newMj = MaJiangConstant::getNewMj($game,$opVal)

                          //向操作者和下一个出牌的人以外的人发送操作消息：
                                      $pushMsg = array('tag'=>'updateCurrentUid','newMj'=>$getNewMj,'opUid'=>$opUid,'opVal'=>$opVal,'game'=>MjGameConstant::getGameSendMsg($game));
                                      $players = $room->players;
                                      $senders = array();
                                      foreach($players as $index => $playUid){
                                          if($playUid == $opUid || $playUid == $game->currentUid) continue;//下一个出牌人 || 当前操作者，不执行下面，返回循环
                                          array_push($senders,PlatformDao::getSender($playUid));
                                      }
                                    --------向玩家推送消息-------------------------------      
                                    ExtGameHelper::senderMessage($senders,$pushMsg)
                          //操作者需要额外更新他的麻将列表：
                                    $pushMsg['mjList'] = $mjList;
                                    --------向操作者推送消息-------------------------------
                                    ExtGameHelper::senderMessage(array(PlatformDao::getSender($opUid)),$pushMsg)
                                    
                          unset($pushMsg['mjList'])：清空推送消息中的麻将手牌

                          新麻将判断：
                              if($getNewMj)
                              真：--------->
                                            黄庄：?

                              
                                                      流局比下胡：?


                               推送的新麻将是什么：
                                                $mjList = MajiangDao::getPlayerMajiang($game->currentUid);
                                                array_push($mjList,$newMj);        $newMj新麻将加入玩家手牌
                                                sort($mjList);
                                                MajiangDao::updatePlayerMajiang($game->currentUid,$mjList)
                                                -----------向玩家推送消息---------
                                                $pushMsg['mjList'] = $mjList;      mjList重新赋值
                                                $pushMsg['newMjVal'] = $newMj;     推送的：新麻将
                                                ExtGameHelper::senderMessage(array(PlatformDao::getSender($game->currentUid)),$pushMsg);

                             假：--------> 
                                                -----------向没有新牌时，推送消息---------
                                                if($opUid == $game->currentUid){
                                                    $pushMsg['mjList'] = $mjList;
                                                }
                                                ExtGameHelper::senderMessage(array(PlatformDao::getSender($game->currentUid)),$pushMsg)    



                          检测外包胡：
                                if($opVal == 3 && self::checkWaiBaoHu($opUid,$mjList,$game,$room,$opVal)){    return;  }

                          检测连杠：
                                 if($opVal == 3 && $game->lOpVal == 3 && $game->lOpUid == $uid){
                                   连杠初始值:       $game->lianGang = 1;   
                                      }
                                    杠类型初值：      $game->gtype = 1;
                                 最后一次操作值:      $game->lOpVal = $opVal;
                                                     $game->lOpUid = $opUid;

                          杠的类型：              $game->gtype = 1;
                          最后一次操作的值：       $game->lOpVal = $opVal;
                                                 $game->lOpUid = $opUid;
                       ----redis---:
                          清除操作：             MajiangDao::clearOperating($game->id);
                          更新游戏：             MajiangDao::updateMajiangGame($game)
                    
            
            
            
            听牌：
                  首先检测请求中是否有mjVal变量，
                  请求中获取发送者senderUid,房间room，房间游戏$room->id
                  判断请求中的当前操作者==发送者，不是就return出去
                  获取发送请求玩家的手牌，判断请求中mjVal是否会胡牌，不胡return
                  此时，将玩家的听牌设为1：->ting[$uid]=1,出牌设置为true:->chupai[$uid]=true
                  向操作者以外的其他人发送操作消息：“tag=>updateCurrentUid” “opVal=>6”???
                  
                  推送新麻将是什么，
                  获取新麻将，
                  将新麻将加入玩家手牌，重新排序
                  更新玩家麻将，----到此，服务器端麻将数据处理完毕
                  ----向玩家推送信息--
                  推送消息，还包含玩家新的麻将手牌mjList，新麻将newMjVal
                  ----游戏redis---
                  添加最后一个操作的值，最后一个操作者，
                  更新当前操作者麻将，
                  更新麻将游戏
                  
           
           花牌：
                  首先检测请求中是否有mjVal变量，
                  请求中获取发送者senderUid,房间room，房间游戏$room->id
                  判断请求中的当前操作者==发送者，不是就return出去
                  //首轮补花可以为空，后面不能为空
                  
                  
                  
                  
                  
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
